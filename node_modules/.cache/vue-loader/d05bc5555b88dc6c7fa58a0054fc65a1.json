{"remainingRequest":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/views/UserList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/views/UserList.vue","mtime":1603988261724},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnRuLXByaW1hcnkgewogIG1hcmdpbi1yaWdodDogMTJweDsKfQo="},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA","file":"UserList.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3 col-xs-6 col-xs-offset-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"user in Users\" :key=\"user.key\">\n              <td>{{ user.name }}</td>\n              <td>{{ user.email }}</td>\n              <td>{{ user.phone }}</td>\n              <td>\n                <router-link\n                  :to=\"{name: 'edit', params: { id: user.key }}\"\n                  class=\"btn btn-primary\"\n                >Edit</router-link>\n                <button @click.prevent=\"deleteUser(user.key)\" class=\"btn btn-danger\">Delete</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { db } from \"../firebaseDb\";\n\nexport default {\n  data() {\n    return {\n      Users: []\n    };\n  },\n  created() {\n    db.collection(\"users\").onSnapshot(snapshotChange => {\n      this.Users = [];\n      snapshotChange.forEach(doc => {\n        this.Users.push({\n          key: doc.id,\n          name: doc.data().name,\n          email: doc.data().email,\n          phone: doc.data().phone\n        });\n      });\n    });\n  },\n  methods: {\n    deleteUser(id) {\n      if (window.confirm(\"Do you really want to delete?\")) {\n        db.collection(\"users\")\n          .doc(id)\n          .delete()\n          .then(() => {\n            console.log(\"Document deleted!\");\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.btn-primary {\n  margin-right: 12px;\n}\n</style>\n\n"]}]}