{"remainingRequest":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/components/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/components/UserList.vue","mtime":1603980724880},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRiIH0gZnJvbSAnLi4vZmlyZWJhc2VEYic7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIFVzZXJzOiBbXQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykub25TbmFwc2hvdCgoc25hcHNob3RDaGFuZ2UpID0+IHsKICAgICAgICAgICAgdGhpcy5Vc2VycyA9IFtdOwogICAgICAgICAgICBzbmFwc2hvdENoYW5nZS5mb3JFYWNoKChkb2MpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuVXNlcnMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAga2V5OiBkb2MuaWQsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogZG9jLmRhdGEoKS5uYW1lLAogICAgICAgICAgICAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsLAogICAgICAgICAgICAgICAgICAgIHBob25lOiBkb2MuZGF0YSgpLnBob25lCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KTsKICAgICAgICB9KQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBkZWxldGVVc2VyKGlkKXsKICAgICAgICAgIGlmICh3aW5kb3cuY29uZmlybSgiRG8geW91IHJlYWxseSB3YW50IHRvIGRlbGV0ZT8iKSkgewogICAgICAgICAgICBkYi5jb2xsZWN0aW9uKCJ1c2VycyIpLmRvYyhpZCkuZGVsZXRlKCkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiRG9jdW1lbnQgZGVsZXRlZCEiKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"user in Users\" :key=\"user.key\">\n                        <td>{{ user.name }}</td>\n                        <td>{{ user.email }}</td>\n                        <td>{{ user.phone }}</td>\n                        <td>\n                            <router-link :to=\"{name: 'edit', params: { id: user.key }}\" class=\"btn btn-primary\">Edit\n                            </router-link>\n                            <button @click.prevent=\"deleteUser(user.key)\" class=\"btn btn-danger\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { db } from '../firebaseDb';\n    \n    export default {\n        data() {\n            return {\n                Users: []\n            }\n        },\n        created() {\n            db.collection('users').onSnapshot((snapshotChange) => {\n                this.Users = [];\n                snapshotChange.forEach((doc) => {\n                    this.Users.push({\n                        key: doc.id,\n                        name: doc.data().name,\n                        email: doc.data().email,\n                        phone: doc.data().phone\n                    })\n                });\n            })\n        },\n        methods: {\n            deleteUser(id){\n              if (window.confirm(\"Do you really want to delete?\")) {\n                db.collection(\"users\").doc(id).delete().then(() => {\n                    console.log(\"Document deleted!\");\n                })\n                .catch((error) => {\n                    console.error(error);\n                })\n              }\n            }\n        }\n    }\n</script>\n\n<style>\n    .btn-primary {\n        margin-right: 12px;\n    }\n</style>\n\n"]}]}