{"remainingRequest":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/views/UserEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/src/views/UserEdit.vue","mtime":1603989815205},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/baloulee/Desktop/github/crud/crud_nestor_v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRiIH0gZnJvbSAiLi4vZmlyZWJhc2VEYiI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHt9CiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGxldCBkYlJlZiA9IGRiLmNvbGxlY3Rpb24oInVzZXJzIikuZG9jKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7CiAgICBkYlJlZgogICAgICAuZ2V0KCkKICAgICAgLnRoZW4oZG9jID0+IHsKICAgICAgICB0aGlzLnVzZXIgPSBkb2MuZGF0YSgpOwogICAgICB9KQogICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblVwZGF0ZUZvcm0oZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgZGIuY29sbGVjdGlvbigidXNlcnMiKQogICAgICAgIC5kb2ModGhpcy4kcm91dGUucGFyYW1zLmlkKQogICAgICAgIC51cGRhdGUodGhpcy51c2VyKQogICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJVc2VyIHN1Y2Nlc3NmdWxseSB1cGRhdGVkISIpOwogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9saXN0dXNlciIpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["UserEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12 col-xs-12\">\n        <h3 class=\"text-center\">Update User</h3>\n        <form @submit.prevent=\"onUpdateForm\">\n          <div class=\"form-group\">\n            <label>Id</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"user.key\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Firstname</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"user.firstname\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Lastname</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"user.lastname\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Phone</label>\n            <input type=\"number\" class=\"form-control\" v-model=\"user.phone\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Birthday</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"user.birthday\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Nationality</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"user.nationality\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-4 offset-4\" align=\"center\">\n              <button class=\"btn btn-primary btn-block\">Edit User</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { db } from \"../firebaseDb\";\n\nexport default {\n  data() {\n    return {\n      user: {}\n    };\n  },\n  created() {\n    let dbRef = db.collection(\"users\").doc(this.$route.params.id);\n    dbRef\n      .get()\n      .then(doc => {\n        this.user = doc.data();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n  methods: {\n    onUpdateForm(event) {\n      event.preventDefault();\n      db.collection(\"users\")\n        .doc(this.$route.params.id)\n        .update(this.user)\n        .then(() => {\n          console.log(\"User successfully updated!\");\n          this.$router.push(\"/listuser\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.row {\n  padding-top: 70px;\n}\n</style>"]}]}